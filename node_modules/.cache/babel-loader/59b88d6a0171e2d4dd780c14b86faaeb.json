{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sheah\\\\Documents\\\\GitHub\\\\recipe\\\\src\\\\components\\\\search_results\\\\SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../Card\";\nimport searchResults from \"../../store/searchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResults = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const searchType = useSelector(state => state.searchType.type);\n  const inputSearch = useSelector(state => state.inputSearch.input);\n  const [queryResults, setQueryResults] = useState([]); // CALLING API TO GET SEARCH RESULTS\n\n  const generateUrl = () => {\n    const SEARCHURL = \"https://api.spoonacular.com/recipes/\";\n    const APIKEY = \"66f8a7f03d564fb9967240266bb00633\";\n    const searchType = \"complexSearch?\";\n    const queryStr = \"query=\" + inputSearch;\n    const NUMBER = \"&number=6\";\n    const DETAILS = \"&addRecipeInformation=true\";\n    const url = SEARCHURL + searchType + \"apiKey=\" + APIKEY + \"&\" + queryStr + NUMBER + DETAILS;\n    console.log(url);\n    return url;\n  };\n\n  const getResults = async url => {\n    const data = await fetch(url);\n    const parsedData = await data.json();\n    setQueryResults(parsedData.results);\n  };\n\n  useEffect(() => {\n    const url = generateUrl();\n    getResults(url);\n  }, []); // const temp = queryResults(\"id\", \"title\", \"image\");\n\n  const createCards = queryResults.map(recipe => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      image: recipe.image,\n      cuisines: recipe.cuisines,\n      dishTypes: recipe.dishTypes,\n      title: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }); //determining title to display based on search type\n\n  const titleSpanFunction = () => {\n    if (searchType === \"name\") {\n      return inputSearch;\n    }\n  };\n\n  const titleSpan = titleSpanFunction();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Search results for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: titleSpan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 31\n        }, this), inputSearch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: createCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResults, \"T4zTCPaO6d2aXJl5KQ3OuJF1/SM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["C:/Users/sheah/Documents/GitHub/recipe/src/components/search_results/SearchResults.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Card","searchResults","SearchResults","props","dispatch","searchType","state","type","inputSearch","input","queryResults","setQueryResults","generateUrl","SEARCHURL","APIKEY","queryStr","NUMBER","DETAILS","url","console","log","getResults","data","fetch","parsedData","json","results","createCards","map","recipe","image","cuisines","dishTypes","title","titleSpanFunction","titleSpan"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,UAAN,CAAiBE,IAA7B,CAA9B;AACA,QAAMC,WAAW,GAAGT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACE,WAAN,CAAkBC,KAA9B,CAA/B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD,CAJ+B,CAM/B;;AACA,QAAMe,WAAW,GAAG,MAAM;AACxB,UAAMC,SAAS,GAAG,sCAAlB;AACA,UAAMC,MAAM,GAAG,kCAAf;AACA,UAAMT,UAAU,GAAG,gBAAnB;AACA,UAAMU,QAAQ,GAAG,WAAWP,WAA5B;AACA,UAAMQ,MAAM,GAAG,WAAf;AACA,UAAMC,OAAO,GAAG,4BAAhB;AACA,UAAMC,GAAG,GACPL,SAAS,GACTR,UADA,GAEA,SAFA,GAGAS,MAHA,GAIA,GAJA,GAKAC,QALA,GAMAC,MANA,GAOAC,OARF;AASAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACD,GAlBD;;AAoBA,QAAMG,UAAU,GAAG,MAAOH,GAAP,IAAe;AAChC,UAAMI,IAAI,GAAG,MAAMC,KAAK,CAACL,GAAD,CAAxB;AACA,UAAMM,UAAU,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAzB;AACAd,IAAAA,eAAe,CAACa,UAAU,CAACE,OAAZ,CAAf;AACD,GAJD;;AAMA9B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,GAAG,GAAGN,WAAW,EAAvB;AACAS,IAAAA,UAAU,CAACH,GAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT,CAjC+B,CAsC/B;;AACA,QAAMS,WAAW,GAAGjB,YAAY,CAACkB,GAAb,CAAkBC,MAAD,IAAY;AAC/C,wBACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEA,MAAM,CAACC,KADhB;AAEE,MAAA,QAAQ,EAAED,MAAM,CAACE,QAFnB;AAGE,MAAA,SAAS,EAAEF,MAAM,CAACG,SAHpB;AAIE,MAAA,KAAK,EAAEH,MAAM,CAACI;AAJhB;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATmB,CAApB,CAvC+B,CAkD/B;;AACA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAI7B,UAAU,KAAK,MAAnB,EAA2B;AACzB,aAAOG,WAAP;AACD;AACF,GAJD;;AAKA,QAAM2B,SAAS,GAAGD,iBAAiB,EAAnC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,wDACsB;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADtB,EAEG3B,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAAsBmB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArED;;GAAMzB,a;UACaJ,W,EACEC,W,EACCA,W;;;KAHhBG,a;AAuEN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Card from \"../Card\";\r\nimport searchResults from \"../../store/searchResults\";\r\n\r\nconst SearchResults = (props) => {\r\n  const dispatch = useDispatch();\r\n  const searchType = useSelector((state) => state.searchType.type);\r\n  const inputSearch = useSelector((state) => state.inputSearch.input);\r\n  const [queryResults, setQueryResults] = useState([]);\r\n\r\n  // CALLING API TO GET SEARCH RESULTS\r\n  const generateUrl = () => {\r\n    const SEARCHURL = \"https://api.spoonacular.com/recipes/\";\r\n    const APIKEY = \"66f8a7f03d564fb9967240266bb00633\";\r\n    const searchType = \"complexSearch?\";\r\n    const queryStr = \"query=\" + inputSearch;\r\n    const NUMBER = \"&number=6\";\r\n    const DETAILS = \"&addRecipeInformation=true\";\r\n    const url =\r\n      SEARCHURL +\r\n      searchType +\r\n      \"apiKey=\" +\r\n      APIKEY +\r\n      \"&\" +\r\n      queryStr +\r\n      NUMBER +\r\n      DETAILS;\r\n    console.log(url);\r\n    return url;\r\n  };\r\n\r\n  const getResults = async (url) => {\r\n    const data = await fetch(url);\r\n    const parsedData = await data.json();\r\n    setQueryResults(parsedData.results);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = generateUrl();\r\n    getResults(url);\r\n  }, []);\r\n\r\n  // const temp = queryResults(\"id\", \"title\", \"image\");\r\n  const createCards = queryResults.map((recipe) => {\r\n    return (\r\n      <Card\r\n        image={recipe.image}\r\n        cuisines={recipe.cuisines}\r\n        dishTypes={recipe.dishTypes}\r\n        title={recipe.title}\r\n      ></Card>\r\n    );\r\n  });\r\n\r\n  //determining title to display based on search type\r\n  const titleSpanFunction = () => {\r\n    if (searchType === \"name\") {\r\n      return inputSearch;\r\n    }\r\n  };\r\n  const titleSpan = titleSpanFunction();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1>\r\n          Search results for: <span>{titleSpan}</span>\r\n          {inputSearch}\r\n        </h1>\r\n      </div>\r\n      <div className=\"row\">{createCards}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"]},"metadata":{},"sourceType":"module"}