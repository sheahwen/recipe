{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sheah\\\\Documents\\\\GitHub\\\\recipe\\\\src\\\\components\\\\recipe\\\\Ingredient.js\";\nimport React from \"react\";\nimport IngredientStatic from \"../data/IngredientStatic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ingredient = () => {\n  const ingredientArrObj = IngredientStatic;\n  const ingredientList = ingredientArrObj.map(ingredient => ingredient.name + \" \" + Math.round(ingredient.amount.metric.value * 100) / 100 + ingredient.amount.metric.unit);\n  const displayIngredientsLeft = ingredientList.map((ingredient, index) => {\n    const length = ingredientList.length;\n    return index < length / 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ingredient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 34\n    }, this);\n  });\n  const displayIngredientsRight = ingredientList.map((ingredient, index) => {\n    const length = ingredientList.length;\n    return index >= length / 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ingredient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 35\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container ingredientContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: displayIngredientsLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: displayIngredientsRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Ingredient;\nexport default Ingredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"sources":["C:/Users/sheah/Documents/GitHub/recipe/src/components/recipe/Ingredient.js"],"names":["React","IngredientStatic","Ingredient","ingredientArrObj","ingredientList","map","ingredient","name","Math","round","amount","metric","value","unit","displayIngredientsLeft","index","length","displayIngredientsRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,gBAAgB,GAAGF,gBAAzB;AACA,QAAMG,cAAc,GAAGD,gBAAgB,CAACE,GAAjB,CACpBC,UAAD,IACEA,UAAU,CAACC,IAAX,GACA,GADA,GAEAC,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACI,MAAX,CAAkBC,MAAlB,CAAyBC,KAAzB,GAAiC,GAA5C,IAAmD,GAFnD,GAGAN,UAAU,CAACI,MAAX,CAAkBC,MAAlB,CAAyBE,IALN,CAAvB;AAOA,QAAMC,sBAAsB,GAAGV,cAAc,CAACC,GAAf,CAAmB,CAACC,UAAD,EAAaS,KAAb,KAAuB;AACvE,UAAMC,MAAM,GAAGZ,cAAc,CAACY,MAA9B;AACA,WAAOD,KAAK,GAAGC,MAAM,GAAG,CAAjB,iBAAsB;AAAA,gBAAIV;AAAJ;AAAA;AAAA;AAAA;AAAA,YAA7B;AACD,GAH8B,CAA/B;AAIA,QAAMW,uBAAuB,GAAGb,cAAc,CAACC,GAAf,CAAmB,CAACC,UAAD,EAAaS,KAAb,KAAuB;AACxE,UAAMC,MAAM,GAAGZ,cAAc,CAACY,MAA9B;AACA,WAAOD,KAAK,IAAIC,MAAM,GAAG,CAAlB,iBAAuB;AAAA,gBAAIV;AAAJ;AAAA;AAAA;AAAA;AAAA,YAA9B;AACD,GAH+B,CAAhC;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBQ;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBG;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5BD;;KAAMf,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport IngredientStatic from \"../data/IngredientStatic\";\r\n\r\nconst Ingredient = () => {\r\n  const ingredientArrObj = IngredientStatic;\r\n  const ingredientList = ingredientArrObj.map(\r\n    (ingredient) =>\r\n      ingredient.name +\r\n      \" \" +\r\n      Math.round(ingredient.amount.metric.value * 100) / 100 +\r\n      ingredient.amount.metric.unit\r\n  );\r\n  const displayIngredientsLeft = ingredientList.map((ingredient, index) => {\r\n    const length = ingredientList.length;\r\n    return index < length / 2 && <p>{ingredient}</p>;\r\n  });\r\n  const displayIngredientsRight = ingredientList.map((ingredient, index) => {\r\n    const length = ingredientList.length;\r\n    return index >= length / 2 && <p>{ingredient}</p>;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container ingredientContainer\">\r\n      <h2>Ingredients</h2>\r\n      <div className=\"row\">\r\n        {/* TO SPLIT INTO TABLE INSTEAD */}\r\n        <div className=\"col-6\">{displayIngredientsLeft}</div>\r\n        <div className=\"col-6\">{displayIngredientsRight}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n"]},"metadata":{},"sourceType":"module"}